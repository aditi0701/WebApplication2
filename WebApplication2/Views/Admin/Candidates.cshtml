@model WebApplication2.ViewModel.AdminViewModel

<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
    <meta charset="UTF-8">
    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>
    <link href='https://fonts.googleapis.com/css?family=Roboto:400,100,300,700' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="~/Content/courseListStyle.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        @@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap');

        .button-17, .addRemark {
            align-items: center;
            appearance: none;
            background-color: #fff;
            border-radius: 24px;
            border-style: none;
            box-shadow: rgba(0, 0, 0, .2) 0 3px 5px -1px,rgba(0, 0, 0, .14) 0 6px 10px 0,rgba(0, 0, 0, .12) 0 1px 18px 0;
            box-sizing: border-box;
            color: #3c4043;
            cursor: pointer;
            display: inline-flex;
            fill: currentcolor;
            font-family: "Google Sans",Roboto,Arial,sans-serif;
            font-size: 14px;
            font-weight: 500;
            height: 48px;
            justify-content: center;
            letter-spacing: .25px;
            line-height: normal;
            max-width: 100%;
            overflow: visible;
            padding: 2px 24px;
            position: relative;
            text-align: center;
            text-transform: none;
            transition: box-shadow 280ms cubic-bezier(.4, 0, .2, 1),opacity 15ms linear 30ms,transform 270ms cubic-bezier(0, 0, .2, 1) 0ms;
            user-select: none;
            -webkit-user-select: none;
            touch-action: manipulation;
            width: auto;
            will-change: transform,opacity;
            z-index: 0;
            margin: 10px;
        }

            .button-17:hover {
                background: #F6F9FE;
                color: #174ea6;
            }

            .button-17:active {
                box-shadow: 0 4px 4px 0 rgb(60 64 67 / 30%), 0 8px 12px 6px rgb(60 64 67 / 15%);
                outline: none;
            }

            .button-17:focus {
                outline: none;
                border: 2px solid #4285f4;
            }

            .button-17:not(:disabled) {
                box-shadow: rgba(60, 64, 67, .3) 0 1px 3px 0, rgba(60, 64, 67, .15) 0 4px 8px 3px;
            }

                .button-17:not(:disabled):hover {
                    box-shadow: rgba(60, 64, 67, .3) 0 2px 3px 0, rgba(60, 64, 67, .15) 0 6px 10px 4px;
                }

                .button-17:not(:disabled):focus {
                    box-shadow: rgba(60, 64, 67, .3) 0 1px 3px 0, rgba(60, 64, 67, .15) 0 4px 8px 3px;
                }

                .button-17:not(:disabled):active {
                    box-shadow: rgba(60, 64, 67, .3) 0 4px 4px 0, rgba(60, 64, 67, .15) 0 8px 12px 6px;
                }

            .button-17:disabled {
                box-shadow: rgba(60, 64, 67, .3) 0 1px 3px 0, rgba(60, 64, 67, .15) 0 4px 8px 3px;
            }

        /* The Modal (background) */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            margin-left: 500px;
            top: 0;
            width: 40%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
        }

        /* Modal Content */
        .modal-content {
            background-color: #fefefe;
            margin: 50px;
            padding: 70px;
            border: 1px solid #888;
            width: 70%;
        }

        /* The Close Button */
        .close {
            color: #aaaaaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            margin-left: 40px;
            margin-top: 0%;
        }

            .close:hover,
            .close:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }

        .close1 {
            color: #aaaaaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            margin-left: 80px;
            margin-top: 0%;
        }

            .close1:hover,
            .close1:focus {
                color: #000;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
</head>

<body>
    <div class="sidebar">

        <ul class="nav-links">
            <li>
                <a>
                    <form method="post" action="/admin/adminprofile">
                        <input type="hidden" name="email" value="@Session["Email"]">
                        <button style="background: none; border: none;" type="submit">
                            <i class='bx bxs-user'></i>
                            <span class="links_name">My Profile</span>
                        </button>
                    </form>
                </a>
            </li>
            <li>
                <a>
                    <form method="get" action="/admin/updateadmin">

                        <input type="hidden" name="email" value="@Session["Email"]">
                        <button style="background: none; border: none;" type="submit">
                            <i class='bx bxs-user'></i>
                            <span class="links_name">Update Profile</span>
                        </button>
                    </form>
                </a>
            </li>
            <li>
                <a>

                    <form action="/admin/courselist" method="post">
                        <input type="hidden" name="email" value="@Session["Email"]">
                        <button style="background: none; border: none;" type="submit">
                            <i class='bx bx-book'></i>
                            <span class="links_name">Course List</span>
                        </button>
                    </form>
                </a>
            </li>



            <li>
                <a>
                    <form action="/admin/addcourses" method="post">
                        <input type="hidden" name="email" value="@Session["Email"]">
                        <button style="background: none; border: none;" type="submit">
                            <i class='bx bx-add-to-queue'></i>
                            <span class="links_name">
                                Add
                                Course
                            </span>
                        </button>
                    </form>
                </a>
            </li>
            <li>
                <a href="http://11.0.0.183/" target="_blank">
                    <i class="bx bx-message"></i>
                    <span class="links_name">SmatBot</span>
                </a>
            </li>
            <li>
                <a>
                    <form action="/admin/login" method="get">
                        <button style="background: none; border: none;" type="submit" onsubmit="return confirm('Are you sure you want to logout?');">
                            <i class='bx bx-log-out'></i>
                            <span class="links_name">Logout</span>
                        </button>
                    </form>
                </a>
            </li>
        </ul>
    </div>

    <section class="home-section">
        <nav>
            <div class="sidebar-button">

                <span class="bannerImage">
                    <img src="https://drive.google.com/uc?export=view&id=1DCdBACp5Ibixr7ov1W-iF4TTDrnydc4O" />
                </span>
                <span class="dop">Directorate of Personnel</span>
                <span class="adminSitetext"> Admin Site</span>
            </div>
        </nav>
    </section>

    <section class="ftco-section">
        <div class="container" style="margin-left:300px;margin-right:50px;">
            <table class="table">
                <thead class="thead-dark">
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Gender</th>
                        <th>Age</th>
                        <th>Status</th>
                        <th>Remarks</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        //fetching the course id when the particular course is selected in courselist page
                        int course_id = Int16.Parse(Session["selected_course"].ToString());
                        var admin = Session["Name"];  // current admin name

                        var n = Model.Users.Count();

                        //users eligible for a particular course
                        foreach (var item in Model.Users)
                        {
                            // course conditions of selected course
                            var data = Model.CourseCondition.Where(s => s.course_id.Equals(course_id)).ToArray();

                            //checking whether user has applied or not
                            var uc = Model.UserCourses.Where(s => s.course_id.Equals(course_id) && s.user_id.Equals(item.user_id)).ToArray();
                            var status = "Not applied";

                            // if count not equal to 0 the status is shown otherwise not applied
                            if (uc.Count() != 0)
                            {
                                status = uc[0].status;
                            }


                            bool flag = true;

                            //checking the eligibility of a particular user for a specific course
                            for (var i = 0; i < data.Length; i++)
                            {
                                var mv = Model.Condition.FirstOrDefault(s => s.condition_id.Equals(data[i].condition_id));

                                var temp = mv.condition_name;

                                if (temp.Equals("rank"))
                                {
                                    string arr = data[i].condition_value;
                                    string[] res = arr.Split(',');
                                    flag = false;
                                    foreach (string x in res)
                                    {
                                        if (!item.rank.Equals(x))
                                        {
                                            flag = true;
                                            break;
                                        }
                                    }
                                }
                                if (temp.Equals("minAge"))
                                {
                                    if (item.age < Int16.Parse(data[i].condition_value))
                                    {
                                        flag = false;
                                    }
                                }
                                if (temp.Equals("maxAge"))
                                {
                                    if (item.age > Int16.Parse(data[i].condition_value))
                                    {
                                        flag = false;
                                    }
                                }
                                if (temp.Equals("qualification"))
                                {
                                    if (!item.qualification.Equals(data[i].condition_value))
                                    {
                                        flag = false;
                                    }
                                }
                                if (temp.Equals("gender"))
                                {
                                    if (!data[i].condition_value.Equals("Both") && !item.gender.Equals(data[i].condition_value))
                                    {
                                        flag = false;
                                    }
                                }
                                if (temp.Equals("medical"))
                                {
                                    if (!item.medical.Equals(data[i].condition_value))
                                    {
                                        flag = false;
                                    }
                                }
                                if (temp.Equals("yearsOfServices"))
                                {
                                    var tt = Int16.Parse(data[i].condition_value);
                                    if (!(item.yearsOfServices == tt))
                                    {
                                        flag = false;
                                    }
                                }
                                if (temp.Equals("acrMarks"))
                                {
                                    var tt = Int16.Parse(data[i].condition_value);
                                    if (!(item.acrMarks >= tt))
                                    {
                                        flag = false;

                                    }
                                }
                            }

                            //if flag is true user is eligible and the details is shown
                            if (flag == true)
                            {
                                <tr>
                                    <th>@item.name</th>
                                    <th>@item.email</th>
                                    <th>@item.gender</th>
                                    <th>@item.age</th>
                                    <th style="white-space:nowrap;">
                                        @{
                                            //string lst_char = admin.ToString().Substring(admin.ToString().Length - 2);
                                            //int temp = Int16.Parse(lst_char.);
                                            // if pending request is at the stage of current admin then approve and reject button is shown
                                            if (status.Equals("Pending_" + @admin))
                                            {
                                                <form action="/admin/approve" method="POST" id="@course_id+form">
                                                    <input type="hidden" value="@item.user_id" name="user">
                                                    <input type="hidden" value="@admin" name="admin" />
                                                    <input type="hidden" value="@course_id" name="link">
                                                </form>
                                                <button type="submit" form="@course_id+form" class='btn btn-default button-17' role="button">Approve</button>

                                                <form action="/admin/reject" method="POST" id="@course_id+reject">
                                                    <input type="hidden" value="@item.user_id" name="user">
                                                    <input type="hidden" value="@admin" name="admin" />
                                                    <input type="hidden" value="@course_id" name="link">

                                                    @*remark only if rejecting*@
                                                </form>

                                                <button type="submit" form="@course_id+reject" class='btn btn-default button-17' role="button">Reject</button>


                                            }
                                            //Else the status is shown
                                            else
                                            {
                                                @status;
                                            }

                                        }
                                    </th>
                                    <th>
                                        
                                            <button class="addRemark" id="button+@item.user_id@course_id" onclick="func(this)">Remarks</button>

                                            <div id="myModal+@item.user_id@course_id" class="modal">

                                                <div class="modal-content">

                                                    <div id="close+@item.user_id@course_id" class="close"> &times;</div>
                                                    <form method="POST" action="/admin/message" id="@course_id+form+@item.user_id">
                                                        <input type="hidden" name="hidden_course" value="@course_id" />
                                                        <input type="hidden" name="hidden_user" value="@item.user_id" />
                                                        <input type="hidden" name="hidden_admin" value="@admin" />

                                                        <input type="text" placeholder="Add remark" name="remark" required />
                                                        <br />
                                                        <br />
                                                        @{


                                                            <select name="to" required>
                                                                <option value="" disabled>Select Recipient</option>
                                                                <option value="admin2">Admin2</option>
                                                                <option value="admin3">Admin3</option>
                                                                <option value="admin4">Admin4</option>
                                                                <option value="admin5">Admin5</option>
                                                                <option value="admin6">Admin6</option>
                                                                <option value="OIC">OIC</option>
                                                                <option value="TC">TC</option>
                                                                <option value="EXO">EXO</option>
                                                            </select>

                                                            @*if (admin.Equals("admin2"))
            {
                <select name="to" required>
                    <option value="" disabled>Select Recipient</option>

                    <option value="admin3">Admin3</option>
                    <option value="admin4">Admin4</option>
                    <option value="admin5">Admin5</option>
                    <option value="admin6">Admin6</option>
                </select>
            }
            if (admin.Equals("admin3"))
            {
                <select name="to" required>
                    <option value="" disabled>Select Recipient</option>

                    <option value="admin4">Admin4</option>
                    <option value="admin5">Admin5
                    <option>
                    <option value="admin6">Admin6</option>
                </select>
            }
            if (admin.Equals("admin4"))
            {
                <select name="to" required>
                    <option value="" disabled>Select Recipient</option>

                    <option value="admin5">Admin5</option>
                    <option value="admin6">Admin6</option>
                </select>
            }
            if (admin.Equals("admin5"))
            {
                <select name="to" required>
                    <option value="" selected disabled>Select Recipient</option>
                    <option value="admin6">Admin6</option>
                </select>
            }*@
                                                            <br />
                                                            <button type="submit" form="@course_id+form+@item.user_id" role="button" class="btn btn-default button-17">Send</button>
                                                        }
                                                        @{


                                                            var remarks = Model.Remarks.Where(s => (s.from_admin.Equals(admin) || s.to_admin.Equals(admin)) && s.course_id.Equals(course_id) && s.user_id.Equals(item.user_id));
                                                            //Response.Write(item.user_id);
                                                            if (remarks != null)
                                                            {
                                                                var arr = remarks.ToArray();
                                                                <table style="border-spacing: 30px;">
                                                                    <thead>
                                                                        <tr>
                                                                            <td>From</td>
                                                                            <td>To</td>
                                                                            <td>Remark</td>

                                                                        </tr>
                                                                    </thead>
                                                                    @for (var i = 0; i < arr.Length; i++)
                                                                    {
                                                                        <tr>
                                                                            <td>
                                                                                @arr[i].from_admin
                                                                            </td>
                                                                            <td>
                                                                                @arr[i].to_admin
                                                                            </td>
                                                                            <td>
                                                                                @arr[i].remark1
                                                                            </td>
                                                                        </tr>
                                                                    }
                                                                </table>
                                                            }


                                                        }


                                                    </form>
                                                </div>
                                            </div>
                                        
                                    </th>
                                </tr>
                                

                            }
                        }
                    }
                </tbody>
            </table>
            <div style="display:flex;justify-content:center;align-items:center;">
                <a href="/admin/courselist"><button type="button" class="button-17" role="button">Back to CourseList</button></a>
            </div>
        </div>
    </section>

    <script>

        
        function func(r) {
            var buttonid = r.id.toString().substring(7);
            //console.log(buttonid);
            var modal = document.getElementById("myModal+" + buttonid);
            modal.style.display = "block";

            // Get the button that opens the modal
            /*var buttons = document.querySelectorAll(".addRemark");*/

            // Get the <span> element that closes the modal
            var span = document.getElementById("close+" + buttonid);

            // When the user clicks the button, open the modal

            //for (let a = 0; a < buttons.length; a++) {
            //    buttons[a].onclick = function () {
                    

            //        modal = 
                    
            //    }
            //}

            // When the user clicks on <span> (x), close the modal
            span.onclick = function () {
                modal.style.display = "none";
            }

            // When the user clicks anywhere outside of the modal, close it
            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }
        }
        
        
    </script>
</body>

</html>



